import { CopyIcon, LogoPumpIcon, SearchOnXIcon } from "@/lib/icons"
import {
  Check as CheckIcon,
  Telegram as TelegramIcon,
} from "@mui/icons-material"
import { Chip } from "@mui/material"
import classNames from "classnames"
import { useState } from "react"

export function CopyText({ text }: { text: string }) {
  const [copied, setCopied] = useState(false)

  return (
    <div>
      {copied ? (
        <div>
          <CheckIcon />
        </div>
      ) : (
        <div
          className="cursor-pointer text-black hover:text-[#C8FF00]"
          onClick={(e) => {
            navigator.clipboard.writeText(text)
            setCopied(true)
            setTimeout(() => setCopied(false), 1000)
            e.stopPropagation()
          }}
        >
          <CopyIcon />
        </div>
      )}
    </div>
  )
}

export function SearchOnX({ text }: { text: string }) {
  return (
    <div
      className="cursor-pointer text-black hover:text-[#C8FF00]"
      onClick={(e) => {
        window.open(`https://x.com/search?q=${text}`)
        e.stopPropagation()
      }}
    >
      <SearchOnXIcon />
    </div>
  )
}

export function LinkTelegram({ link }: { link: string }) {
  return (
    <div className="flex items-center justify-center">
      <TelegramIcon
        onClick={(e) => {
          window.open(link, "_blank")
          e.stopPropagation()
        }}
        sx={{ width: 18, height: 18 }}
      />
    </div>
  )
}

export function SummaryCopyRight() {
  return (
    <div className="w-[380px] h-[24px] px-[10px] rounded-[6px] bg-[#EEFFB0]">
      <div className="inline-block">
        <LogoPumpIcon className="mr-[4px] inline-block" />
        <span className="text-[12px] font-semibold">Pump.now</span>
      </div>
      <span className="ml-[6px] text-[12px]">
        Auto generated by Pump.now, DYOR.
      </span>
    </div>
  )
}

export const ButtonStyled = {
  boxShadow: "none",
}

export function TagList({
  tag,
  className,
}: {
  tag: string[]
  className?: string
}) {
  const tagConfig: { [key: string]: string } = {
    feeds: "#E1F3FF",
    zoo: "#A4FBB7",
    agent: "#C7D2FF",
    sci: "#FCC7FF",
    nft: "#FFE2C7",
    desci: "#FCC7FF",
    ai: "#C7D2FF",
    cele: "#FFEB93",
  }
  return (
    <div className={classNames("flex items-center gap-[4px]", className)}>
      {tag?.map((item, index) => {
        return (
          <Chip
            key={item + "_" + index}
            label={item}
            sx={{
              height: "100%",
              backgroundColor: tagConfig?.[item?.toLowerCase()] ?? "#FCC7FF",
              "&.MuiChip-root": { borderRadius: "6px" },
              "&.MuiChip-root .MuiChip-label": { padding: "0px 6px" },
            }}
          />
        )
      })}
    </div>
  )
}
